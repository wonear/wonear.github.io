<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>build.gradle.kts项目中统一开发版本</title>
    <link href="/2025/01/18/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%89%88%E6%9C%AC/"/>
    <url>/2025/01/18/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%89%88%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h2 id="方式1：最简单的方式"><a href="#方式1：最简单的方式" class="headerlink" title="方式1：最简单的方式"></a>方式1：最简单的方式</h2><p>gradle.properties代码</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs groovy">compileSdkVersion=<span class="hljs-number">33</span><br>minSdkVersion=<span class="hljs-number">21</span><br>targetSdkVersion=<span class="hljs-number">33</span><br></code></pre></td></tr></table></figure><p>在 build.gradle.kts 中引用</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs groovy">android &#123;<br>    compileSdk = property(<span class="hljs-string">&quot;compileSdkVersion&quot;</span>).toString().toInt()<br>    defaultConfig &#123;<br>        minSdk = property(<span class="hljs-string">&quot;minSdkVersion&quot;</span>).toString().toInt()<br>        targetSdk = property(<span class="hljs-string">&quot;targetSdkVersion&quot;</span>).toString().toInt()<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="方式-2：直接在根级-build-gradle-kts-中定义常量"><a href="#方式-2：直接在根级-build-gradle-kts-中定义常量" class="headerlink" title="方式 2：直接在根级 build.gradle.kts 中定义常量"></a>方式 2：直接在根级 <code>build.gradle.kts</code> 中定义常量</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs groovy"><span class="hljs-comment">// 定义全局常量</span><br>val compileSdkVersion = <span class="hljs-number">33</span><br>val minSdkVersion = <span class="hljs-number">21</span><br>val targetSdkVersion = <span class="hljs-number">33</span><br><br>subprojects &#123;<br>    plugins.withId(<span class="hljs-string">&quot;com.android.application&quot;</span>) &#123;<br>        extensions.getByName&lt;com.android.build.gradle.BaseExtension&gt;(<span class="hljs-string">&quot;android&quot;</span>).apply &#123;<br>            compileSdkVersion(compileSdkVersion)<br>            defaultConfig &#123;<br>                minSdk = minSdkVersion<br>                targetSdk = targetSdkVersion<br>            &#125;<br>        &#125;<br>    &#125;<br>    plugins.withId(<span class="hljs-string">&quot;com.android.library&quot;</span>) &#123;<br>        extensions.getByName&lt;com.android.build.gradle.LibraryExtension&gt;(<span class="hljs-string">&quot;android&quot;</span>).apply &#123;<br>            compileSdkVersion(compileSdkVersion)<br>            defaultConfig &#123;<br>                minSdk = minSdkVersion<br>                targetSdk = targetSdkVersion<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p> 所有子模块都会使用这些统一的版本号。  </p><h2 id="方式-3：通过扩展函数封装设置逻辑"><a href="#方式-3：通过扩展函数封装设置逻辑" class="headerlink" title="方式 3：通过扩展函数封装设置逻辑"></a>方式 3：通过扩展函数封装设置逻辑</h2><p> 在根级 <code>build.gradle.kts</code> 中定义一个扩展函数，用于配置 SDK 版本号：  </p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs groovy"><span class="hljs-comment">// 定义一个扩展函数</span><br>fun com.android.build.gradle.BaseExtension.applyCommonSdkConfig() &#123;<br>    compileSdkVersion(<span class="hljs-number">33</span>)<br>    defaultConfig &#123;<br>        minSdk = <span class="hljs-number">21</span><br>        targetSdk = <span class="hljs-number">33</span><br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 在子模块中应用扩展函数</span><br>subprojects &#123;<br>    plugins.withId(<span class="hljs-string">&quot;com.android.application&quot;</span>) &#123;<br>        extensions.getByName&lt;com.android.build.gradle.BaseExtension&gt;(<span class="hljs-string">&quot;android&quot;</span>).apply &#123;<br>            applyCommonSdkConfig()<br>        &#125;<br>    &#125;<br>    plugins.withId(<span class="hljs-string">&quot;com.android.library&quot;</span>) &#123;<br>        extensions.getByName&lt;com.android.build.gradle.LibraryExtension&gt;(<span class="hljs-string">&quot;android&quot;</span>).apply &#123;<br>            applyCommonSdkConfig()<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>将上述代码放入根级 <code>build.gradle.kts</code> 文件中,然后确保所有子模块的 <code>build.gradle.kts</code> 文件中正确应用了 <code>com.android.application</code> 或 <code>com.android.library</code> 插件，例如：  </p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs groovy">plugins &#123;<br>    id(<span class="hljs-string">&quot;com.android.application&quot;</span>) <span class="hljs-comment">// 或 id(&quot;com.android.library&quot;)</span><br>    id(<span class="hljs-string">&quot;kotlin-android&quot;</span>)<br>&#125;<br><br>android &#123;<br>    <span class="hljs-comment">// 此处无需再配置 compileSdkVersion、minSdk、targetSdk 等。</span><br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="方式-4：将配置提取到独立的-Kotlin-脚本文件"><a href="#方式-4：将配置提取到独立的-Kotlin-脚本文件" class="headerlink" title="方式 4：将配置提取到独立的 Kotlin 脚本文件"></a>方式 4：将配置提取到独立的 Kotlin 脚本文件</h2><h4 id="1-创建-config-gradle-kts"><a href="#1-创建-config-gradle-kts" class="headerlink" title="1: 创建 config.gradle.kts"></a>1: 创建 <code>config.gradle.kts</code></h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs groovy">val compileSdkVersion = <span class="hljs-number">33</span><br>val minSdkVersion = <span class="hljs-number">21</span><br>val targetSdkVersion = <span class="hljs-number">33</span><br><br>fun com.android.build.gradle.BaseExtension.applyCommonSdkConfig() &#123;<br>    compileSdkVersion(compileSdkVersion)<br>    defaultConfig &#123;<br>        minSdk = minSdkVersion<br>        targetSdk = targetSdkVersion<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="2-在-build-gradle-kts-中应用这个脚本"><a href="#2-在-build-gradle-kts-中应用这个脚本" class="headerlink" title="2: 在 build.gradle.kts 中应用这个脚本"></a>2: 在 <code>build.gradle.kts</code> 中应用这个脚本</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs groovy">apply(from = <span class="hljs-string">&quot;config.gradle.kts&quot;</span>)<br><br>subprojects &#123;<br>    plugins.withId(<span class="hljs-string">&quot;com.android.application&quot;</span>) &#123;<br>        extensions.getByName&lt;com.android.build.gradle.BaseExtension&gt;(<span class="hljs-string">&quot;android&quot;</span>).apply &#123;<br>            applyCommonSdkConfig()<br>        &#125;<br>    &#125;<br>    plugins.withId(<span class="hljs-string">&quot;com.android.library&quot;</span>) &#123;<br>        extensions.getByName&lt;com.android.build.gradle.LibraryExtension&gt;(<span class="hljs-string">&quot;android&quot;</span>).apply &#123;<br>            applyCommonSdkConfig()<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="方式-5：在-Settings-脚本中统一配置"><a href="#方式-5：在-Settings-脚本中统一配置" class="headerlink" title="方式 5：在 Settings 脚本中统一配置"></a>方式 5：在 Settings 脚本中统一配置</h2><p> 如果项目有多个模块，可以直接在 <code>settings.gradle.kts</code> 中定义扩展属性，供所有模块使用：  </p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs groovy">pluginManagement &#123;<br>    val compileSdkVersion = <span class="hljs-number">33</span><br>    val minSdkVersion = <span class="hljs-number">21</span><br>    val targetSdkVersion = <span class="hljs-number">33</span><br><br>    <span class="hljs-comment">// 将这些变量导出给所有模块</span><br>    extra[<span class="hljs-string">&quot;compileSdkVersion&quot;</span>] = compileSdkVersion<br>    extra[<span class="hljs-string">&quot;minSdkVersion&quot;</span>] = minSdkVersion<br>    extra[<span class="hljs-string">&quot;targetSdkVersion&quot;</span>] = targetSdkVersion<br>&#125;<br><br></code></pre></td></tr></table></figure><p> 在模块级 <code>build.gradle.kts</code> 中使用：  </p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs groovy">android &#123;<br>    compileSdk = extra[<span class="hljs-string">&quot;compileSdkVersion&quot;</span>] <span class="hljs-keyword">as</span> Int<br>    defaultConfig &#123;<br>        minSdk = extra[<span class="hljs-string">&quot;minSdkVersion&quot;</span>] <span class="hljs-keyword">as</span> Int<br>        targetSdk = extra[<span class="hljs-string">&quot;targetSdkVersion&quot;</span>] <span class="hljs-keyword">as</span> Int<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>android</category>
      
    </categories>
    
    
    <tags>
      
      <tag>gradle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>补间动画的属性和用法</title>
    <link href="/2020/08/01/%E8%A1%A5%E9%97%B4%E5%8A%A8%E7%94%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E5%92%8C%E7%94%A8%E6%B3%95/"/>
    <url>/2020/08/01/%E8%A1%A5%E9%97%B4%E5%8A%A8%E7%94%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E5%92%8C%E7%94%A8%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="补间动画"><a href="#补间动画" class="headerlink" title="补间动画"></a>补间动画</h1><h2 id="一-公共属性"><a href="#一-公共属性" class="headerlink" title="一. 公共属性"></a>一. 公共属性</h2><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><strong>fillAfter</strong></td><td>保持动画结束时候的状态</td></tr><tr><td><strong>fillBefore</strong></td><td>动画执行完毕后还原到初始状态</td></tr><tr><td><strong>duration</strong></td><td>设置动画执行的时间，单位毫秒</td></tr><tr><td><strong>fillEnabled</strong></td><td>和fillBefore的效果相同</td></tr><tr><td><strong>repeatMode</strong></td><td>设定动画的重复类型<strong>reverse|restart</strong>，reverse倒序回放，restart是重新执行，要和repeatCount一起使用才能看到效果</td></tr><tr><td><strong>repeatCount</strong></td><td>指定动画执行次数，设置为infinite时，表示无限次执行</td></tr><tr><td><strong>interpolator</strong></td><td>设定动画插值器</td></tr></tbody></table><p><strong>公共属性适用于所有的补间动画</strong></p><p><strong>加载方法</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">val</span> animal = AnimationUtils.loadAnimation(<span class="hljs-keyword">this</span>, R.anim.scale)<br>imageView.startAnimation(animal)<br></code></pre></td></tr></table></figure><h2 id="二-scale动画（伸缩变化）"><a href="#二-scale动画（伸缩变化）" class="headerlink" title="二. scale动画（伸缩变化）"></a>二. scale动画（伸缩变化）</h2><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><strong>fromXScale</strong></td><td>动画起始时控件x轴的伸缩比率</td></tr><tr><td><strong>fromYScale</strong></td><td>动画起始时控件y轴的伸缩比率</td></tr><tr><td><strong>toXScale</strong></td><td>动画在控件x轴要伸缩的最终比例</td></tr><tr><td><strong>toYScale</strong></td><td>动画在控件y轴要伸缩的最终比例</td></tr><tr><td><strong>pivotX</strong></td><td>动画开始的位置中心x坐标</td></tr><tr><td><strong>pivotY</strong></td><td>动画开始的位置中心y坐标</td></tr></tbody></table><p><strong><u>pivotX和pivotY的取值可以是数值，百分比和百分比p(例如50,50%,50%p)。</u></strong></p><ol><li>数值：表示动画开始相对于父控件内的偏移位置作为动画起点</li><li>百分比：表示相对动画控件内部的位置作为动画起点</li><li>百分比p：表示相对于动画控件的父控件的位置作为动画起点</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">scale</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:duration</span>=<span class="hljs-string">&#x27;2000&#x27;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:fromXScale</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:fromYScale</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:pivotX</span>=<span class="hljs-string">&quot;50&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:pivotY</span>=<span class="hljs-string">&quot;50&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:toXScale</span>=<span class="hljs-string">&quot;1.5&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:toYScale</span>=<span class="hljs-string">&quot;1.5&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><p><img src="http://file.wonear.site/scale2.gif"></p><hr><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">scale</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:duration</span>=<span class="hljs-string">&#x27;2000&#x27;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:fromXScale</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:fromYScale</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:pivotX</span>=<span class="hljs-string">&quot;50%&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:pivotY</span>=<span class="hljs-string">&quot;50%&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:toXScale</span>=<span class="hljs-string">&quot;1.5&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:toYScale</span>=<span class="hljs-string">&quot;1.5&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><p><img src="http://file.wonear.site/scale3.gif"></p><hr><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">scale</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:duration</span>=<span class="hljs-string">&#x27;2000&#x27;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:fromXScale</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:fromYScale</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:pivotX</span>=<span class="hljs-string">&quot;50%p&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:pivotY</span>=<span class="hljs-string">&quot;50%p&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:toXScale</span>=<span class="hljs-string">&quot;1.5&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:toYScale</span>=<span class="hljs-string">&quot;1.5&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><p><img src="http://file.wonear.site/scale4.gif"></p><hr><h2 id="三-alpha动画（透明度变化）"><a href="#三-alpha动画（透明度变化）" class="headerlink" title="三. alpha动画（透明度变化）"></a>三. alpha动画（透明度变化）</h2><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><strong>fromAlpha</strong></td><td>动画开始时的透明度0.0–1.0</td></tr><tr><td><strong>toAlpha</strong></td><td>动画结束时的透明度0.0–1.0</td></tr></tbody></table><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">alpha</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:fromAlpha</span>=<span class="hljs-string">&quot;1&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:duration</span>=<span class="hljs-string">&quot;2000&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:toAlpha</span>=<span class="hljs-string">&quot;0.1&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p><img src="http://file.wonear.site/alpha.gif"></p><h2 id="四-rotate动画（旋转变化）"><a href="#四-rotate动画（旋转变化）" class="headerlink" title="四. rotate动画（旋转变化）"></a>四. rotate动画（旋转变化）</h2><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><strong>fromDegrees</strong></td><td>动画开始旋转时的角度设置</td></tr><tr><td><strong>toDegrees</strong></td><td>动画结束时旋转到的角度</td></tr><tr><td><strong>pivotX</strong></td><td>旋转中心的x坐标</td></tr><tr><td><strong>pivotY</strong></td><td>旋转中心的y坐标</td></tr></tbody></table><p><strong>pivotX，pivotY可以设置数值、百分比、百分比p三种样式</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">rotate</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:duration</span>=<span class="hljs-string">&quot;2000&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:fromDegrees</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:pivotX</span>=<span class="hljs-string">&quot;50%&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:pivotY</span>=<span class="hljs-string">&quot;50%&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:toDegrees</span>=<span class="hljs-string">&quot;360&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p><img src="http://file.wonear.site/rotate5453531236577676.gif"></p><hr><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">rotate</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:duration</span>=<span class="hljs-string">&quot;2000&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:fromDegrees</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:pivotX</span>=<span class="hljs-string">&quot;50&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:pivotY</span>=<span class="hljs-string">&quot;50&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:toDegrees</span>=<span class="hljs-string">&quot;360&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p><img src="http://file.wonear.site/rotate5453531236652324.gif"></p><hr><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">rotate</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:duration</span>=<span class="hljs-string">&quot;2000&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:fromDegrees</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:pivotX</span>=<span class="hljs-string">&quot;50%p&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:pivotY</span>=<span class="hljs-string">&quot;50%p&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:toDegrees</span>=<span class="hljs-string">&quot;360&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p><img src="http://file.wonear.site/rotate5453531236652222.gif"></p><h2 id="五-translate动画（平移变化）"><a href="#五-translate动画（平移变化）" class="headerlink" title="五. translate动画（平移变化）"></a>五. translate动画（平移变化）</h2><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><strong>fromXDelta</strong></td><td>平移起点的x坐标值</td></tr><tr><td><strong>fromYDelta</strong></td><td>平移起点的y坐标值</td></tr><tr><td><strong>toXDelta</strong></td><td>平移结束的x坐标值</td></tr><tr><td><strong>toYDelta</strong></td><td>平移结束的y坐标值</td></tr></tbody></table><p>translate的属性都可以设置数值、百分比、百分比p三种样式，作用和scale动画中的类似</p><ol><li>具体数值</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">translate</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:duration</span>=<span class="hljs-string">&quot;2000&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:fromXDelta</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:fromYDelta</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:toXDelta</span>=<span class="hljs-string">&quot;150&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:toYDelta</span>=<span class="hljs-string">&quot;150&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p><img src="http://file.wonear.site/translate5453531236652222.gif" alt="具体数值"></p><hr><ol start="2"><li>相对自身位置</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">translate</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:duration</span>=<span class="hljs-string">&quot;2000&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:fromXDelta</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:fromYDelta</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:toXDelta</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:toYDelta</span>=<span class="hljs-string">&quot;100%&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p><img src="http://file.wonear.site/translate54535331236652221.gif" alt="相对自身位置"></p><hr><ol start="3"><li>相对父控件位置</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">translate</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:duration</span>=<span class="hljs-string">&quot;2000&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:fromXDelta</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:fromYDelta</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:toXDelta</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:toYDelta</span>=<span class="hljs-string">&quot;100%p&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p><img src="http://file.wonear.site/translate5453533123665444.gif" alt="相对父控件位置"></p><h2 id="六-set动画"><a href="#六-set动画" class="headerlink" title="六. set动画"></a>六. set动画</h2><p>set是一个容器标签，可以添加多个动画效果，最终显示的动画是set中多个动画的组合效果</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">set</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:duration</span>=<span class="hljs-string">&quot;2000&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">scale</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:fromXScale</span>=<span class="hljs-string">&quot;1&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:fromYScale</span>=<span class="hljs-string">&quot;1&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:pivotX</span>=<span class="hljs-string">&quot;50%&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:pivotY</span>=<span class="hljs-string">&quot;50%&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:repeatCount</span>=<span class="hljs-string">&quot;infinite&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:toXScale</span>=<span class="hljs-string">&quot;3&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:toYScale</span>=<span class="hljs-string">&quot;3&quot;</span> /&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">alpha</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:fromAlpha</span>=<span class="hljs-string">&quot;0.5&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:repeatCount</span>=<span class="hljs-string">&quot;infinite&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:toAlpha</span>=<span class="hljs-string">&quot;0.1&quot;</span> /&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">set</span>&gt;</span><br></code></pre></td></tr></table></figure><p>界面布局</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:app</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:tools</span>=<span class="hljs-string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">tools:context</span>=<span class="hljs-string">&quot;.MainActivity&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">RelativeLayout</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;@dimen/dp300&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;@dimen/dp300&quot;</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ImageView</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/imageView1&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;@dimen/dp100&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;@dimen/dp100&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_centerInParent</span>=<span class="hljs-string">&quot;true&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:src</span>=<span class="hljs-string">&quot;@drawable/shape_bg&quot;</span> /&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ImageView</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/imageView2&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;@dimen/dp100&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;@dimen/dp100&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_centerInParent</span>=<span class="hljs-string">&quot;true&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:src</span>=<span class="hljs-string">&quot;@drawable/shape_bg&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ImageView</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/imageView3&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;@dimen/dp100&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;@dimen/dp100&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_centerInParent</span>=<span class="hljs-string">&quot;true&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:src</span>=<span class="hljs-string">&quot;@drawable/shape_bg&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ImageView</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/imageView&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;@dimen/dp100&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;@dimen/dp100&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_centerInParent</span>=<span class="hljs-string">&quot;true&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:src</span>=<span class="hljs-string">&quot;@mipmap/ic_launcher&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">RelativeLayout</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br></code></pre></td></tr></table></figure><p>代码</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"> <span class="hljs-keyword">val</span> animal = AnimationUtils.loadAnimation(<span class="hljs-keyword">this</span>, R.anim.<span class="hljs-keyword">set</span>)<br>        <span class="hljs-keyword">val</span> animal1 = AnimationUtils.loadAnimation(<span class="hljs-keyword">this</span>, R.anim.<span class="hljs-keyword">set</span>)<br>        <span class="hljs-keyword">val</span> animal2 = AnimationUtils.loadAnimation(<span class="hljs-keyword">this</span>, R.anim.<span class="hljs-keyword">set</span>)<br>        <span class="hljs-keyword">val</span> animal3 = AnimationUtils.loadAnimation(<span class="hljs-keyword">this</span>, R.anim.<span class="hljs-keyword">set</span>)<br>        animal1.startOffset = <span class="hljs-number">300</span><br>        animal2.startOffset = <span class="hljs-number">600</span><br>        animal3.startOffset = <span class="hljs-number">900</span><br>        imageView.setOnClickListener &#123;<br><span class="hljs-comment">//            imageView.startAnimation(animal)</span><br>            imageView1.startAnimation(animal1)<br>            imageView2.startAnimation(animal2)<br>            imageView3.startAnimation(animal3)<br>        &#125;<br></code></pre></td></tr></table></figure><p><img src="http://file.wonear.site/set5453533123665444.gif"></p><h2 id="七-动画插值器说明"><a href="#七-动画插值器说明" class="headerlink" title="七. 动画插值器说明"></a>七. 动画插值器说明</h2><table><thead><tr><th>xml</th><th>类</th><th>效果说明</th></tr></thead><tbody><tr><td>@android:anim&#x2F;accelerate_decelerate_interpolator</td><td>AccelerateDecelerateInterpolator</td><td>开始结束比较慢，中间快</td></tr><tr><td>@android:anim&#x2F;accelerate_interpolator</td><td>AccelerateInterpolator</td><td>开始慢，越来越快</td></tr><tr><td>@android:anim&#x2F;anticipate_interpolator</td><td>AnticipateInterpolator</td><td>先稍微向反方向，然后执行设定动画</td></tr><tr><td>@android:anim&#x2F;anticipate_overshoot_interpolator</td><td>AnticipateOvershootInterpolator</td><td>先稍微向反方向，然后执行设定动画，最后在稍微反方向</td></tr><tr><td>@android:anim&#x2F;bounce_interpolator</td><td>BounceInterpolator</td><td>弹跳效果</td></tr><tr><td>@android:anim&#x2F;cycle_interpolator</td><td>CycleInterpolator</td><td>循环插值器（来回执行）</td></tr><tr><td>@android:anim&#x2F;decelerate_interpolator</td><td>DecelerateInterpolator</td><td>开始快，越来越慢</td></tr><tr><td>@android:anim&#x2F;linear_interpolator</td><td>LinearInterpolator</td><td>匀速</td></tr><tr><td>@android:anim&#x2F;overshoot_interpolator</td><td>OvershootInterpolator</td><td>结束偏移插值器，动画结束时在沿着动画方向继续运动一小段</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>android</category>
      
    </categories>
    
    
    <tags>
      
      <tag>动画</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android项目中资源文件分模块的方法</title>
    <link href="/2020/07/25/Android%E9%A1%B9%E7%9B%AE%E4%B8%AD%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%88%86%E6%A8%A1%E5%9D%97%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <url>/2020/07/25/Android%E9%A1%B9%E7%9B%AE%E4%B8%AD%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%88%86%E6%A8%A1%E5%9D%97%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>在之前的项目开发中一直有个困扰，当项目做大时，各种文件数量就变得非常多，很多时候找一个文件就要找很久，包名下的代码文件可以自己建包来做区分，还好办一点，但是资源文件，像布局、图片、样式这些没有模块化，经常忘记名字然后找半天找不到。实在是造成很多困扰，后面才发现可以利用gradle来进行资源的模块化处理。</p><p>资源分模块做起来其实很简单</p><p>修改app模块下的build.gradle文件，在android闭包中添加sourceSets配置</p><p>在与res文件同级的地方添加文件夹 res_test，然后在gradle文件中添加代码</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs groovy">android &#123;<br>  ...<br>sourceSets &#123;<br>      main &#123;<br>          res.srcDirs = [<span class="hljs-string">&#x27;src/main/res&#x27;</span>, <span class="hljs-string">&#x27;src/main/res_test&#x27;</span>]<br>      &#125;<br>  &#125;<br>&#125;<br><br><br>-----------------------------------<br><br><br>#或者在android外<br>android&#123;<br>  ...<br>&#125;<br><span class="hljs-variable language_">this</span>.android.sourceSets &#123;<br>    main &#123;<br>      res.srcDirs = [<span class="hljs-string">&#x27;src/main/res&#x27;</span>,<span class="hljs-string">&#x27;src/main/res_test&#x27;</span>]<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>res.srcDirs对应的集合里可以指定多个自己定义的资源包路径，同步gradle后就能发现</p><p><img src="http://file.wonear.site/g3.jpg?ynotemdtimestamp=1595650646908" alt="图例"></p><p>res_test和res的功能是一样的，这样就可以建立多个模块，然后把对应模块的资源进行区分</p><p>通过srcDirs指定的文件夹会变成和原来res文件夹具有同样的功能，所以这个文件夹放在项目中哪个地方都可以，只要这边指定的路径正确，那个文件夹就会变成另一个res文件夹，但是要注意不要在多个放置相同名称的资源。</p>]]></content>
    
    
    <categories>
      
      <category>android</category>
      
    </categories>
    
    
    <tags>
      
      <tag>gradle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>app内图片灰色效果实现</title>
    <link href="/2020/07/25/app%E5%86%85%E5%9B%BE%E7%89%87%E7%81%B0%E8%89%B2%E6%95%88%E6%9E%9C%E5%AE%9E%E7%8E%B0/"/>
    <url>/2020/07/25/app%E5%86%85%E5%9B%BE%E7%89%87%E7%81%B0%E8%89%B2%E6%95%88%E6%9E%9C%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<p>2020年是令人难忘的一年，新型肺炎的肆虐，给全国人民带来了巨大的灾难。所幸国内的疫情已经受到控制，这次事件值得人们铭记。可以说这次国内能这么快控制住情况，起最大作用的是国家政府的英明决策和前线人员舍生忘死的战斗。向他们致以最高的敬意。</p><p>为悼念新型肺炎牺牲的人员，清明节当天，几乎全网大厂app内效果都变成灰色，作为一个程序员，很好奇一个app是怎么做到全局改变显示效果的。偶然看懂鸿洋的一篇博客，简单记录下实现方式。</p><p>在activity中添加代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Paint</span> <span class="hljs-variable">paint</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Paint</span>();<br><span class="hljs-type">ColorMatrix</span> <span class="hljs-variable">colorMatrix</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ColorMatrix</span>();<br>colorMatrix.setSaturation(<span class="hljs-number">0</span>);<br>paint.setColorFilter(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ColorMatrixColorFilter</span>(colorMatrix));<br>getWindow().getDecorView().setLayerType(View.LAYER_TYPE_HARDWARE, paint);<br></code></pre></td></tr></table></figure><p>这样就基本上可以实现app内颜色、图片置灰。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://mp.weixin.qq.com/s/EioJ8ogsCxQEFm44mKFiOQ">App 黑白化实现探索2， 发现了一种更方便的方案，我被锤了！</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>android</category>
      
    </categories>
    
    
    <tags>
      
      <tag>效果</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>EasyPermissions使用问题</title>
    <link href="/2020/07/25/EasyPermissions%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/"/>
    <url>/2020/07/25/EasyPermissions%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h3 id="1-遇到的问题描述"><a href="#1-遇到的问题描述" class="headerlink" title="1. 遇到的问题描述"></a>1. 遇到的问题描述</h3><p>在启动界面使用EasyPermissions，这个界面有用到权限的申请，但是第一次拒绝权限后（未勾选不再提醒），下次再发起权限请求时，EasyPermissions的询问弹窗出现占满屏幕且背景颜色异常的迷一样的问题。但是在其他界面发起权限请求并不会出现这个问题。</p><h3 id="2-出现的问题效果图片"><a href="#2-出现的问题效果图片" class="headerlink" title="2. 出现的问题效果图片"></a>2. 出现的问题效果图片</h3><p><img src="http://file.wonear.site/WechatIMG23.jpeg?imageMogr2/thumbnail/400x600!&ynotemdtimestamp=1595650441211" alt="问题效果图片"></p><h3 id="3-问题分析和解决"><a href="#3-问题分析和解决" class="headerlink" title="3. 问题分析和解决"></a>3. 问题分析和解决</h3><p>一开始并没有去查看其他界面的弹窗效果，一直以为是EasyPermissions使用的问题，去issue找了半天没找到问题，百度也没有结果。自己源码翻了半天，没招，就去看了下其他界面的的权限请求弹窗效果，结果是正常的。</p><p>只有启动界面出现问题，那就好办了，查看了下启动界面的代码和主题，弹窗出现全屏显示，应该是被activity的主题影响了。</p><p>启动页设置的样式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;SplashStyle&quot;</span> <span class="hljs-attr">parent</span>=<span class="hljs-string">&quot;AppTheme&quot;</span></span><br><span class="hljs-tag">      &lt;<span class="hljs-attr">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;android:windowNoTitle&quot;</span><span class="hljs-attr">true</span>&lt;/<span class="hljs-attr">item</span></span><br><span class="hljs-tag">      &lt;<span class="hljs-attr">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;android:windowFullscreen&quot;</span><span class="hljs-attr">true</span>&lt;/<span class="hljs-attr">item</span></span><br><span class="hljs-tag">      &lt;<span class="hljs-attr">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;android:background&quot;</span>@<span class="hljs-attr">drawable</span>/<span class="hljs-attr">splash</span>&lt;/<span class="hljs-attr">item</span></span><br><span class="hljs-tag">  &lt;/<span class="hljs-attr">style</span></span><br></code></pre></td></tr></table></figure><p>排除一下发现下面这句话的锅</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;android:background&quot;</span>@<span class="hljs-attr">drawable</span>/<span class="hljs-attr">splash</span>&lt;/<span class="hljs-attr">item</span></span><br></code></pre></td></tr></table></figure><p>这边为了优化启动的视觉效果，给app启动页预先设置背景，莫名的挖了个坑。</p><h3 id="4-解决方法"><a href="#4-解决方法" class="headerlink" title="4. 解决方法"></a>4. 解决方法</h3><p>既然是主题样式的问题，那么解决方法就简单了，给EasyPermissions的弹窗单独设置主题</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?</span><br><span class="hljs-meta">&lt;resources</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">    &lt;style name=<span class="hljs-string">&quot;EasyPermissions_theme&quot;</span></span><br><span class="hljs-meta">        &lt;item name=<span class="hljs-string">&quot;android:layout_width&quot;</span>wrap_content&lt;/item</span><br><span class="hljs-meta">        &lt;item name=<span class="hljs-string">&quot;android:layout_height&quot;</span>wrap_content&lt;/item</span><br><span class="hljs-meta">        &lt;item name=<span class="hljs-string">&quot;android:windowIsFloating&quot;</span>true&lt;/item</span><br><span class="hljs-meta">        &lt;item name=<span class="hljs-string">&quot;android:backgroundDimEnabled&quot;</span>false&lt;/item</span><br><span class="hljs-meta">        &lt;item name=<span class="hljs-string">&quot;android:background&quot;</span>@null&lt;/item</span><br><span class="hljs-meta">    &lt;/style</span><br><span class="hljs-meta"></span><br><span class="hljs-meta">&lt;/resources</span><br></code></pre></td></tr></table></figure><p>发起请求的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//        EasyPermissions.requestPermissions(getCurActivity(), rationale, requestCode, perms);</span><br>        EasyPermissions.requestPermissions(<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">PermissionRequest</span>.Builder(getCurActivity(), requestCode, perms)<br>                        .setRationale(rationale)<br>                        .setPositiveButtonText(<span class="hljs-string">&quot;确定&quot;</span>)<br>                        .setNegativeButtonText(<span class="hljs-string">&quot;取消&quot;</span>)<br>                        .setTheme(R.style.EasyPermissions_theme)<br>                        .build());<br><br>    &#125;<br></code></pre></td></tr></table></figure><p><img src="http://file.wonear.site/WechatIMG24.jpeg?imageMogr2/thumbnail/400x600!&ynotemdtimestamp=1595650441211" alt="最后效果"></p>]]></content>
    
    
    <categories>
      
      <category>android</category>
      
    </categories>
    
    
    <tags>
      
      <tag>权限</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用gradle-properties来定义gradle常量</title>
    <link href="/2020/07/25/gradle%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B8%B8%E9%87%8F%E9%85%8D%E7%BD%AE/"/>
    <url>/2020/07/25/gradle%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B8%B8%E9%87%8F%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h3 id="1-gradle自定义常量的原因"><a href="#1-gradle自定义常量的原因" class="headerlink" title="1. gradle自定义常量的原因"></a>1. gradle自定义常量的原因</h3><p> 在多module中，gradle文件里存在大量常量，而且基本上是相同的。在项目或者依赖库版本升级的时候，修改起来十分的不友好。一两个module时可能无所谓，但是正常开发中可能涉及到十几个module的情况，一方面是修改起来十分不友好，工作量太大，一方面可能出现漏改的情况，导致依赖冲突、打包失败等的问题。这个时候就可以通过自定义全局常量来改变这种情况。</p><h3 id="2-自定义常量的方法"><a href="#2-自定义常量的方法" class="headerlink" title="2. 自定义常量的方法"></a>2. 自定义常量的方法</h3><p> gradle可以通过ext来自定义常量，要做到常量共用的话，就要在根节点下的build.gradle文件中进行常量定义。</p><h4 id="写法1"><a href="#写法1" class="headerlink" title="写法1"></a>写法1</h4> <figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs groovy">buildscript &#123;<br><br>    repositories &#123;<br>        google()<br>        jcenter()<br><br>    &#125;<br>    dependencies &#123;<br>        classpath <span class="hljs-string">&#x27;com.android.tools.build:gradle:3.6.1&#x27;</span><br>    &#125;<br>&#125;<br><br>allprojects &#123;<br>    repositories &#123;<br>        google()<br>        jcenter()<br>    &#125;<br>&#125;<br><br>task clean(<span class="hljs-attr">type:</span> Delete) &#123;<br>    delete rootProject.buildDir<br>&#125;<br><br>ext &#123;<br>    android = [<br>            <span class="hljs-symbol">compileSdkVersion:</span> <span class="hljs-number">29</span>,<br>            <span class="hljs-symbol">buildToolsVersion:</span> <span class="hljs-string">&quot;29.0.2&quot;</span>,<br>            <span class="hljs-attr">applicationId    :</span> <span class="hljs-string">&quot;com.geeboo.jetpackproject&quot;</span>,<br>            <span class="hljs-attr">minSdkVersion    :</span> <span class="hljs-number">16</span>,<br>            <span class="hljs-attr">targetSdkVersion :</span> <span class="hljs-number">29</span>,<br>            <span class="hljs-attr">versionCode      :</span> <span class="hljs-number">1</span>,<br>            <span class="hljs-attr">versionName      :</span> <span class="hljs-string">&quot;1.0&quot;</span><br>    ]<br><br>    libs = [<br>            <span class="hljs-symbol">libAndroidAppcompat:</span> <span class="hljs-string">&#x27;androidx.appcompat:appcompat:1.1.0&#x27;</span>,<br>            <span class="hljs-symbol">libAndroidConstraintlayout:</span> <span class="hljs-string">&#x27;androidx.constraintlayout:constraintlayout:1.1.3&#x27;</span>,<br>            <span class="hljs-symbol">libJunit:</span> <span class="hljs-string">&#x27;junit:junit:4.12&#x27;</span>,<br>            <span class="hljs-symbol">libTestJunit:</span> <span class="hljs-string">&#x27;androidx.test.ext:junit:1.1.1&#x27;</span>,<br>            <span class="hljs-symbol">libTestEspresso:</span> <span class="hljs-string">&#x27;androidx.test.espresso:espresso-core:3.2.0&#x27;</span><br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><p> 直接在build.gradle中进行定义，这种方式在自定义常量太多时，看起来似乎不太舒服，而且根结点的gradle中经常需要配置一些其他的东西，可能导致整个文件一大堆代码。所以还可以用插件的方式单独进行常量定义</p><h4 id="写法2"><a href="#写法2" class="headerlink" title="写法2"></a>写法2</h4><p> 在根目录下创建一个common.gradle文件（文件名称随意）专门用来定义常量</p> <figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs groovy">ext &#123;<br>    android = [<br>            <span class="hljs-symbol">compileSdkVersion:</span> <span class="hljs-number">29</span>,<br>            <span class="hljs-symbol">buildToolsVersion:</span> <span class="hljs-string">&quot;29.0.2&quot;</span>,<br>            <span class="hljs-attr">applicationId    :</span> <span class="hljs-string">&quot;com.xxx.xxx&quot;</span>,<br>            <span class="hljs-attr">minSdkVersion    :</span> <span class="hljs-number">16</span>,<br>            <span class="hljs-attr">targetSdkVersion :</span> <span class="hljs-number">29</span>,<br>            <span class="hljs-attr">versionCode      :</span> <span class="hljs-number">1</span>,<br>            <span class="hljs-attr">versionName      :</span> <span class="hljs-string">&quot;1.0&quot;</span><br>    ]<br><br>    libs = [<br>            <span class="hljs-symbol">libAndroidAppcompat:</span> <span class="hljs-string">&#x27;androidx.appcompat:appcompat:1.1.0&#x27;</span>,<br>            <span class="hljs-symbol">libAndroidConstraintlayout:</span> <span class="hljs-string">&#x27;androidx.constraintlayout:constraintlayout:1.1.3&#x27;</span>,<br>            <span class="hljs-symbol">libJunit:</span> <span class="hljs-string">&#x27;junit:junit:4.12&#x27;</span>,<br>            <span class="hljs-symbol">libTestJunit:</span> <span class="hljs-string">&#x27;androidx.test.ext:junit:1.1.1&#x27;</span>,<br>            <span class="hljs-symbol">libTestEspresso:</span> <span class="hljs-string">&#x27;androidx.test.espresso:espresso-core:3.2.0&#x27;</span><br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><p> 然后在根节点下的build.gradle中添加 <strong>apply from: file(‘common.gradle’)</strong></p> <figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs groovy">apply <span class="hljs-attr">from:</span> file(<span class="hljs-string">&#x27;common.gradle&#x27;</span>)<br>buildscript &#123;<br><br>    repositories &#123;<br>        google()<br>        jcenter()<br><br>    &#125;<br>    dependencies &#123;<br>        classpath <span class="hljs-string">&#x27;com.android.tools.build:gradle:3.6.1&#x27;</span><br>    &#125;<br>&#125;<br><br>allprojects &#123;<br>    repositories &#123;<br>        google()<br>        jcenter()<br>    &#125;<br>&#125;<br><br>task clean(<span class="hljs-attr">type:</span> Delete) &#123;<br>    delete rootProject.buildDir<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-使用常量的方法"><a href="#3-使用常量的方法" class="headerlink" title="3. 使用常量的方法"></a>3. 使用常量的方法</h3> <figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs groovy">apply <span class="hljs-attr">plugin:</span> <span class="hljs-string">&#x27;com.android.application&#x27;</span><br><br>android &#123;<br>    compileSdkVersion rootProject.ext.android.compileSdkVersion<br>    buildToolsVersion rootProject.ext.android.buildToolsVersion<br>    defaultConfig &#123;<br>        applicationId rootProject.ext.android.applicationId<br>        minSdkVersion rootProject.ext.android.minSdkVersion<br>        targetSdkVersion rootProject.ext.android.targetSdkVersion<br>        versionCode rootProject.ext.android.versionCode<br>        versionName rootProject.ext.android.versionName<br>        testInstrumentationRunner <span class="hljs-string">&quot;androidx.test.runner.AndroidJUnitRunner&quot;</span><br>    &#125;<br><br>    buildTypes &#123;<br>        release &#123;<br>            minifyEnabled <span class="hljs-literal">false</span><br>            proguardFiles getDefaultProguardFile(<span class="hljs-string">&#x27;proguard-android-optimize.txt&#x27;</span>), <span class="hljs-string">&#x27;proguard-rules.pro&#x27;</span><br>        &#125;<br>    &#125;<br><br>&#125;<br><br>dependencies &#123;<br>    implementation fileTree(<span class="hljs-attr">dir:</span> <span class="hljs-string">&#x27;libs&#x27;</span>, <span class="hljs-attr">include:</span> [<span class="hljs-string">&#x27;*.jar&#x27;</span>])<br>    implementation libs.libAndroidAppcompat<br>    implementation libs.libAndroidConstraintlayout<br>    testImplementation libs.libJunit<br>    androidTestImplementation libs.libTestJunit<br>    androidTestImplementation libs.libTestEspresso<br>&#125;<br></code></pre></td></tr></table></figure><p> 跟未修改前的代码对比一下，修改后的看起来简直不能太爽。</p>]]></content>
    
    
    <categories>
      
      <category>android</category>
      
    </categories>
    
    
    <tags>
      
      <tag>gradle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用gradle-properties来定义gradle常量</title>
    <link href="/2020/07/25/%E4%BD%BF%E7%94%A8gradle-properties%E6%9D%A5%E5%AE%9A%E4%B9%89gradle%E5%B8%B8%E9%87%8F/"/>
    <url>/2020/07/25/%E4%BD%BF%E7%94%A8gradle-properties%E6%9D%A5%E5%AE%9A%E4%B9%89gradle%E5%B8%B8%E9%87%8F/</url>
    
    <content type="html"><![CDATA[<p>gradle.properties文件中定义的变量只能是key&#x3D;value的形式，相比ext扩展变量的方式多了些局限性。</p><h3 id="类举编译版本号的定义和使用"><a href="#类举编译版本号的定义和使用" class="headerlink" title="类举编译版本号的定义和使用"></a>类举编译版本号的定义和使用</h3><h4 id="1-定义方式"><a href="#1-定义方式" class="headerlink" title="1. 定义方式"></a>1. 定义方式</h4><p>定义变量方式直接在gradle.properties添加</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs groovy">#测试字段<br>testKey=<span class="hljs-literal">false</span><br>COMPILESDKVERSION=<span class="hljs-number">29</span><br>BUILDTOOLSVERSION=<span class="hljs-number">29.0</span><span class="hljs-number">.2</span><br></code></pre></td></tr></table></figure><h4 id="2-使用方式"><a href="#2-使用方式" class="headerlink" title="2. 使用方式"></a>2. 使用方式</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs groovy"><span class="hljs-attr">compileSdkVersion:</span> COMPILESDKVERSION.toInteger()<br><span class="hljs-attr">buildToolsVersion:</span> BUILDTOOLSVERSION<br></code></pre></td></tr></table></figure><p>定义和使用似乎比较方便，不需要在考虑写法什么的，反正就一种。….</p><h4 id="3-注意点"><a href="#3-注意点" class="headerlink" title="3.注意点"></a>3.注意点</h4><ol><li>gradle.properties定义的属性，在使用时拿到的默认是String类型的，所以有些地方需要自己进行类型转换，就像上面compileSdkVersion的使用一样。</li></ol><p>测试图 <img src="http://file.wonear.site/g1.jpg?ynotemdtimestamp=1595650262221" alt="图1"></p><p><img src="http://file.wonear.site/g2.jpg?ynotemdtimestamp=1595650262221" alt="图2"></p><ol><li>这边定义的变量名称最好不要和gradle中的一些关键词同名，规范一点用大写字母等方式可能会好一点，当然如果非要小写、非要和gradle中的关键词同名，那么也可以用另一种方式调用。 例如</li></ol><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs groovy">#gradle.properties文件定义<br>compileSdkVersion=<span class="hljs-number">29</span><br>buildToolsVersion=<span class="hljs-number">29.0</span><span class="hljs-number">.2</span><br>#使用<br>compileSdkVersion project.compileSdkVersion.toInteger()<br>buildToolsVersion project.buildToolsVersion<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>android</category>
      
    </categories>
    
    
    <tags>
      
      <tag>gradle</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
